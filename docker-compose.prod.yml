services:
  worktimeflow:
    build:
      context: .
      args: { APP_ENV: prod }
    image: worktimeflow:prod
    environment:
      APP_ENV: prod
      SERVER_NAME: ":80"                  # let Traefik terminate TLS
      CADDY_GLOBAL_OPTIONS: "auto_https off"
      # <<< configure your real DB here >>>
      # Example if you have a managed MariaDB or another container:
      # DATABASE_URL: "mysql://db_user:db_password@db-host:3306/db?serverVersion=10.11.2-MariaDB&charset=utf8mb4"
      # MESSENGER_TRANSPORT_DSN: "sync://"
      # MAILER_DSN: "null://null"
    networks: [web]
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.services.worktimeflow.loadbalancer.server.port=80"

      # HTTP -> HTTPS
      - "traefik.http.routers.wtf-web.rule=Host(`work-time-flow.site`) || Host(`www.work-time-flow.site`)"
      - "traefik.http.routers.wtf-web.entrypoints=web"
      - "traefik.http.middlewares.wtf-https.redirectscheme.scheme=https"
      - "traefik.http.routers.wtf-web.middlewares=wtf-https@docker"
      - "traefik.http.routers.wtf-web.service=worktimeflow"

      # HTTPS (apex) – the real app
      - "traefik.http.routers.wtf.rule=Host(`work-time-flow.site`)"
      - "traefik.http.routers.wtf.entrypoints=websecure"
      - "traefik.http.routers.wtf.tls.certresolver=le"
      - "traefik.http.routers.wtf.service=worktimeflow"

      # HTTPS (www) – redirect to apex
      - "traefik.http.middlewares.wtf-www2apex.redirectregex.regex=^https?://www\\.work-time-flow\\.site/(.*)"
      - "traefik.http.middlewares.wtf-www2apex.redirectregex.replacement=https://work-time-flow.site/$$1"
      - "traefik.http.middlewares.wtf-www2apex.redirectregex.permanent=true"
      - "traefik.http.routers.wtf-www.rule=Host(`www.work-time-flow.site`)"
      - "traefik.http.routers.wtf-www.entrypoints=websecure"
      - "traefik.http.routers.wtf-www.tls.certresolver=le"
      - "traefik.http.routers.wtf-www.middlewares=wtf-www2apex@docker"
      - "traefik.http.routers.wtf-www.service=worktimeflow"

    restart: unless-stopped

networks:
  web:
    external: true
