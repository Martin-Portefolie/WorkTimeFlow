services:
  app:
    build:
      context: .
      args: { APP_ENV: prod }
    image: worktimeflow_app:prod
    environment:
      APP_ENV: prod
      APP_SECRET: "0aae38485c70f7ea7e06f162a2be4b4c36923268a37bece0abed99d0d329bc33"
      APP_DEBUG: "0"
      SERVER_NAME: ":80"
      CADDY_GLOBAL_OPTIONS: "auto_https off"
      DATABASE_URL: "mysql://db_user:db_password@db:3306/db?serverVersion=10.11.2-MariaDB&charset=utf8mb4"
      MESSENGER_TRANSPORT_DSN: "doctrine://default?auto_setup=0"
      MAILER_DSN: "null://null"
      TZ: "Europe/Copenhagen"
    depends_on:
      db:
        condition: service_healthy
    networks: [web, internal]
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.services.wtf.loadbalancer.server.port=80"

      - "traefik.http.routers.wtf-apex.rule=Host(`work-time-flow.site`)"
      - "traefik.http.routers.wtf-apex.entrypoints=websecure"
      - "traefik.http.routers.wtf-apex.tls.certresolver=le"

      - "traefik.http.middlewares.wtf-https.redirectscheme.scheme=https"
      - "traefik.http.routers.wtf-web.rule=Host(`work-time-flow.site`) || Host(`www.work-time-flow.site`)"
      - "traefik.http.routers.wtf-web.entrypoints=web"
      - "traefik.http.routers.wtf-web.middlewares=wtf-https@docker"
      - "traefik.http.routers.wtf-web.service=wtf"

      - "traefik.http.middlewares.wtf-canon.redirectregex.regex=^https?://www\\.work-time-flow\\.site/(.*)"
      - "traefik.http.middlewares.wtf-canon.redirectregex.replacement=https://work-time-flow.site/$1"
      - "traefik.http.middlewares.wtf-canon.redirectregex.permanent=true"
      - "traefik.http.routers.wtf-www.rule=Host(`www.work-time-flow.site`)"
      - "traefik.http.routers.wtf-www.entrypoints=websecure"
      - "traefik.http.routers.wtf-www.tls.certresolver=le"
      - "traefik.http.routers.wtf-www.middlewares=wtf-canon@docker"
    restart: unless-stopped

  db:
    image: mariadb:10.11.2
    container_name: wtf_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: db
      MYSQL_USER: db_user
      MYSQL_PASSWORD: db_password
      TZ: "Europe/Copenhagen"
    volumes:
      - db_data:/var/lib/mysql
    networks: [internal]
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h localhost -p$${MYSQL_ROOT_PASSWORD} --silent" ]
      interval: 5s
      timeout: 5s
      retries: 30

networks:
  web:
    external: true
  internal:

volumes:
  db_data:
