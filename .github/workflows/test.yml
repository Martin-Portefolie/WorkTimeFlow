name: CI/CD for Symfony

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:10.11.2
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: db
          MYSQL_USER: db_user
          MYSQL_PASSWORD: db_password
        ports:
          - "0:3306"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: ctype, iconv, pdo_mysql
          tools: composer:v2

      - name: Check PHP version
        run: php -v

      - name: Check Composer version
        run: composer -V

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Stop any process using port 3307
        run: |
          sudo lsof -i :3307 || true
          sudo fuser -k 3307/tcp || true

      - name: Start Docker services
        run: docker compose up -d

      - name: Get assigned MariaDB port
        run: echo "DB_PORT=$(docker inspect -f '{{ (index .NetworkSettings.Ports "3306/tcp" 0).HostPort }}' mariadb_container)" >> $GITHUB_ENV

      - name: Wait for database to be ready
        run: |
          until docker exec mariadb_container mysqladmin ping -h "127.0.0.1" --silent; do
            echo "Waiting for MariaDB..."
            sleep 2
          done

      - name: Run Symfony console commands
        run: |
          php bin/console cache:clear
          if php bin/console doctrine:migrations:status | grep -q "Available Migrations"; then
            php bin/console doctrine:migrations:migrate --no-interaction
          else
            echo "No migrations found, skipping."
          fi

      - name: Run PHPUnit tests
        env:
          DATABASE_URL: "mysql://db_user:db_password@127.0.0.1:${{ env.DB_PORT }}/db"
        run: vendor/bin/phpunit

  changelog:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
  
        - name: Generate Changelog
          uses: release-drafter/release-drafter@v5
          id: changelog
          with:
            config-name: release-drafter.yml
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        - name: Post Changelog as PR Comment
          uses: marocchino/sticky-pull-request-comment@v2
          with:
            message: "### Changelog\n${{ steps.changelog.outputs.changelog }}"
